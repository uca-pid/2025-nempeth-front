name: CI

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22]
    name: Node ${{ matrix.node }}
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload to Coveralls (parallel)
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/lcov.info
          parallel: true
          flag-name: node-${{ matrix.node }}
        continue-on-error: true

  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
        continue-on-error: true

  build_check:
    runs-on: ubuntu-latest
    name: Build (Vite)
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build
        env:
          VITE_API_BASE_URL: https://korven-api-56885c34702b.herokuapp.com

  deploy-frontend:
    needs: [finish, build_check]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    name: Deploy to Heroku (frontend)
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Validate Heroku secrets
        shell: bash
        run: |
          set -euo pipefail
          [[ -n "${HEROKU_APP_NAME:-}" ]] || { echo "::error::HEROKU_APP_NAME no está seteado"; exit 1; }
          [[ -n "${HEROKU_API_KEY:-}"  ]] || { echo "::error::HEROKU_API_KEY no está seteado";  exit 1; }
          [[ -n "${HEROKU_EMAIL:-}"    ]] || { echo "::error::HEROKU_EMAIL no está seteado";    exit 1; }
          echo "HEROKU_APP_NAME length: ${#HEROKU_APP_NAME}"
          echo "HEROKU_API_KEY length: ${#HEROKU_API_KEY}"
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_API_KEY:  ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL:    ${{ secrets.HEROKU_EMAIL }}

      - name: Probe Heroku git endpoint
        shell: bash
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_API_KEY:  ${{ secrets.HEROKU_API_KEY }}
        run: |
          set -euo pipefail
          echo "Probing https://git.heroku.com/${HEROKU_APP_NAME}.git"
          git ls-remote "https://heroku:${HEROKU_API_KEY}@git.heroku.com/${HEROKU_APP_NAME}.git" >/dev/null
          echo "Heroku git endpoint is reachable ✅"

      - name: Push to Heroku (git deploy)
        shell: bash
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          HEROKU_API_KEY:  ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL:    ${{ secrets.HEROKU_EMAIL }}
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "${HEROKU_EMAIL}"
          git remote remove heroku || true
          git remote add heroku "https://heroku:${HEROKU_API_KEY}@git.heroku.com/${HEROKU_APP_NAME}.git"
          git remote -v
          git push heroku HEAD:main -f
